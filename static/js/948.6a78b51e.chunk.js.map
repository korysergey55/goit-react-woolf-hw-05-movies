{"version":3,"file":"static/js/948.6a78b51e.chunk.js","mappings":"uTAIMA,EAAW,gCACXC,EAAe,IAAIC,gBAAgB,CACvCC,QAHU,qCAMNC,EAAoB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAI,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACR,OAA9Bb,EAAac,IAAI,OAAQN,GAAKG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELE,EAAAA,EAAAA,IAAU,GAADC,OAAIjB,EAAQ,uBAAAiB,OAAsBhB,GAAgB,CAChFiB,QAAS,CACPC,OAAQ,sBAEV,OAJU,OAIVT,EAAAE,EAAAQ,KAJMT,EAAID,EAAJC,KAAIC,EAAAS,OAAA,SAKLV,GAAI,OAAAC,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAGXW,EAAAA,GAAAA,MAAY,GAADN,OAAIL,EAAAU,GAAME,SAAW,CAC9BC,MAAO,YACP,yBAAAb,EAAAc,OAAA,GAAAlB,EAAA,kBAEL,gBAfyBmB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,KAgBpBC,EAAe,eAAAC,GAAAzB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyB,EAAOC,GAAE,IAAAC,EAAAvB,EAAA,OAAAJ,IAAAA,MAAA,SAAA4B,GAAA,cAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,cAAAqB,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAENE,EAAAA,EAAAA,IAAU,GAADC,OAAIjB,EAAQ,WAAAiB,OAAUgB,EAAE,KAAAhB,OAAIhB,IAAe,OAA/D,OAA+DiC,EAAAC,EAAAf,KAAnET,EAAIuB,EAAJvB,KAAIwB,EAAAd,OAAA,SACLV,GAAI,OAAAwB,EAAAtB,KAAA,EAAAsB,EAAAb,GAAAa,EAAA,SAGXZ,EAAAA,GAAAA,MAAY,GAADN,OAAIkB,EAAAb,GAAME,SAAW,CAC9BC,MAAO,YACP,yBAAAU,EAAAT,OAAA,GAAAM,EAAA,kBAEL,gBAVoBI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAYfQ,EAAS,eAAAC,GAAAhC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgC,EAAON,GAAE,IAAAO,EAAA7B,EAAA,OAAAJ,IAAAA,MAAA,SAAAkC,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,cAAA2B,EAAA5B,KAAA,EAAA4B,EAAA3B,KAAA,EAEAE,EAAAA,EAAAA,IAAU,GAADC,OAAIjB,EAAQ,WAAAiB,OAAUgB,EAAE,aAAAhB,OAAYhB,IAAe,OAAvE,OAAuEuC,EAAAC,EAAArB,KAA3ET,EAAI6B,EAAJ7B,KAAI8B,EAAApB,OAAA,SACLV,GAAI,OAAA8B,EAAA5B,KAAA,EAAA4B,EAAAnB,GAAAmB,EAAA,SAGXlB,EAAAA,GAAAA,MAAY,GAADN,OAAIwB,EAAAnB,GAAME,SAAW,CAC9BC,MAAO,YACP,yBAAAgB,EAAAf,OAAA,GAAAa,EAAA,kBAEL,gBAVcG,GAAA,OAAAJ,EAAAV,MAAA,KAAAC,UAAA,KAYTc,EAAY,eAAAC,GAAAtC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsC,EAAOZ,GAAE,IAAAa,EAAAnC,EAAA,OAAAJ,IAAAA,MAAA,SAAAwC,GAAA,cAAAA,EAAAlC,KAAAkC,EAAAjC,MAAA,cAAAiC,EAAAlC,KAAA,EAAAkC,EAAAjC,KAAA,EAEHE,EAAAA,EAAAA,IAAU,GAADC,OAAIjB,EAAQ,WAAAiB,OAAUgB,EAAE,aAAAhB,OAAYhB,IAAe,OAAvE,OAAuE6C,EAAAC,EAAA3B,KAA3ET,EAAImC,EAAJnC,KAAIoC,EAAA1B,OAAA,SACLV,GAAI,OAAAoC,EAAAlC,KAAA,EAAAkC,EAAAzB,GAAAyB,EAAA,SAGXxB,EAAAA,GAAAA,MAAY,GAADN,OAAI8B,EAAAzB,GAAME,SAAW,CAC9BC,MAAO,YACP,yBAAAsB,EAAArB,OAAA,GAAAmB,EAAA,kBAEL,gBAViBG,GAAA,OAAAJ,EAAAhB,MAAA,KAAAC,UAAA,KAYZoB,EAAgB,eAAAC,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4C,EAAOC,GAAK,IAAAC,EAAA1C,EAAA,OAAAJ,IAAAA,MAAA,SAAA+C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAzC,KAAA,EAAAyC,EAAAxC,KAAA,EAEVE,EAAAA,EAAAA,IAAU,GAADC,OAAIjB,EAAQ,iBAAAiB,OAAgBhB,EAAY,WAAAgB,OAAUmC,IAAQ,OAA9E,OAA8EC,EAAAC,EAAAlC,KAAlFT,EAAI0C,EAAJ1C,KAAI2C,EAAAjC,OAAA,SACLV,GAAI,OAAA2C,EAAAzC,KAAA,EAAAyC,EAAAhC,GAAAgC,EAAA,SAGX/B,EAAAA,GAAAA,MAAY,GAADN,OAAIqC,EAAAhC,GAAME,SAAW,CAC9BC,MAAO,YACP,yBAAA6B,EAAA5B,OAAA,GAAAyB,EAAA,kBAEL,gBAVqBI,GAAA,OAAAL,EAAAtB,MAAA,KAAAC,UAAA,I,oHC5DtB,GAAgB,KAAO,qBAAqB,KAAO,qBAAqB,KAAO,qBAAqB,aAAe,6BAA6B,MAAQ,uB,oCCyDxJ,EAnDiB,WACf,IAAQ2B,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAqBtB,OAnBAI,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAW,eAAA5D,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA0D,EAAA,OAAA3D,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOuB,EAAAA,EAAAA,IAAUmB,GAAQ,QAAnCU,EAAQtD,EAAAQ,MACD+C,KAAKC,OAAS,GACzBL,EAASG,EAASC,MACnBvD,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAU,GAAAV,EAAA,SAGDyD,QAAQC,IAAG1D,EAAAU,IAAO,yBAAAV,EAAAc,OAAA,GAAAlB,EAAA,kBAErB,kBAVgB,OAAAH,EAAAuB,MAAA,KAAAC,UAAA,KAYb2B,GACFS,GAEJ,GAAG,CAACT,KAGFe,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,UAAiBC,SAC9BZ,EAAMM,OAAS,GAEZG,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,KAAYC,SACxBZ,EAAMa,KAAI,SAACR,GAAI,OACdS,EAAAA,EAAAA,MAAA,MAAkBJ,UAAWC,EAAAA,KAAYC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,KAAYC,SAAEP,EAAKU,UAAYV,EAAKU,UAAY,WAC9DN,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,aAAoBC,UAClCH,EAAAA,EAAAA,KAAA,OACEO,IAAKX,EAAKY,aAAY,kCAAA9D,OAAqCkD,EAAKY,cAAiBC,EACjFC,IAAI,QACJT,UAAWC,EAAAA,YANRN,EAAKlC,GAST,OAMTsC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,KAAYC,SAAC,4CAKrC,C","sources":["api/api.js","webpack://react-homework-template/./src/components/pages/castPage/styles.module.css?45c9","components/pages/castPage/CastPage.js"],"sourcesContent":["import axios from 'axios'\nimport { toast } from 'react-toastify'\n\nconst KEY = \"6e40e6f870b3f7c3f9fcc54179d0bae2\";\nconst BASE_URL = 'https://api.themoviedb.org/3/'\nconst searchParams = new URLSearchParams({\n  api_key: KEY,\n});\n\nconst getTrendingMoviesAPI = async (page) => {\n  searchParams.set('page', page)\n  try {\n    const { data } = await axios.get(`${BASE_URL}trending/movie/day?${searchParams}`, {\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n    return data\n  }\n  catch (error) {\n    toast.error(`${error.message}`, {\n      theme: 'colored',\n    })\n  }\n}\nconst getMovieByIdAPI = async (id) => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/movie/${id}?${searchParams}`)\n    return data\n  }\n  catch (error) {\n    toast.error(`${error.message}`, {\n      theme: 'colored',\n    })\n  }\n}\n\nconst geCastAPI = async (id) => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/movie/${id}/credits?${searchParams}`)\n    return data\n  }\n  catch (error) {\n    toast.error(`${error.message}`, {\n      theme: 'colored',\n    })\n  }\n}\n\nconst geReviewsAPI = async (id) => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/movie/${id}/reviews?${searchParams}`)\n    return data\n  }\n  catch (error) {\n    toast.error(`${error.message}`, {\n      theme: 'colored',\n    })\n  }\n}\n\nconst geMuviesQueryAPI = async (query) => {\n  try {\n    const { data } = await axios.get(`${BASE_URL}search/movie?${searchParams}&query=${query}`)\n    return data\n  }\n  catch (error) {\n    toast.error(`${error.message}`, {\n      theme: 'colored',\n    })\n  }\n}\n\n\nexport { getTrendingMoviesAPI, getMovieByIdAPI, geCastAPI, geReviewsAPI, geMuviesQueryAPI }","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"styles_list__FpooG\",\"item\":\"styles_item__Vt5Bl\",\"text\":\"styles_text__tuZ0m\",\"imageWripper\":\"styles_imageWripper__T+wER\",\"image\":\"styles_image__+YVUG\"};","import React, { useEffect, useState } from 'react'\nimport styles from './styles.module.css'\n\nimport { useParams } from 'react-router-dom';\nimport { geCastAPI } from 'api/api';\nimport defaultImg from '../../../sourses/images/products/default.jpg'\n\nconst CastPage = () => {\n  const { movieID } = useParams()\n  const [casts, setCasts] = useState([])\n\n  useEffect(() => {\n\n    const getCastInfo = async () => {\n      try {\n        const response = await geCastAPI(movieID)\n        if (response.cast.length > 0) {\n          setCasts(response.cast)\n        }\n      }\n      catch (error) {\n        console.log(error)\n      }\n    }\n\n    if (movieID) {\n      getCastInfo()\n    }\n  }, [movieID])\n\n  return (\n    <div className={styles.container}>\n      {casts.length > 0 ?\n        (\n          <ul className={styles.list}>\n            {casts.map((cast) => (\n              <li key={cast.id} className={styles.item}>\n                <p className={styles.text}>{cast.character ? cast.character : \"Actor\"}</p>\n                <div className={styles.imageWripper}>\n                  <img\n                    src={cast.profile_path ? `https://image.tmdb.org/t/p/w92/${cast.profile_path}` : defaultImg}\n                    alt=\"actor\"\n                    className={styles.image}\n                  />\n                </div>\n              </li>\n            ))}\n          </ul>\n        )\n        :\n        (\n          <p className={styles.text}>We dont hawe any casts for this muvie!</p>\n        )\n      }\n    </div >\n  );\n}\n\nexport default CastPage;"],"names":["BASE_URL","searchParams","URLSearchParams","api_key","getTrendingMoviesAPI","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","page","_yield$axios$get","data","_context","prev","next","set","axios","concat","headers","Accept","sent","abrupt","t0","toast","message","theme","stop","_x","apply","arguments","getMovieByIdAPI","_ref2","_callee2","id","_yield$axios$get2","_context2","_x2","geCastAPI","_ref3","_callee3","_yield$axios$get3","_context3","_x3","geReviewsAPI","_ref4","_callee4","_yield$axios$get4","_context4","_x4","geMuviesQueryAPI","_ref5","_callee5","query","_yield$axios$get5","_context5","_x5","movieID","useParams","_useState","useState","_useState2","_slicedToArray","casts","setCasts","useEffect","getCastInfo","response","cast","length","console","log","_jsx","className","styles","children","map","_jsxs","character","src","profile_path","defaultImg","alt"],"sourceRoot":""}